apply plugin: 'java'
apply plugin: 'jacoco'

repositories {
    mavenCentral()
    mavenLocal()
    def sdkDir = readSdkDirFromLocalProperties() ?: System.env.ANDROID_HOME;
    if (sdkDir != null) {
        ivy {
            url sdkDir + "/extras/android/m2repository/"
            layout "maven"
        }
    }
}

private def readSdkDirFromLocalProperties() {
    try {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        properties.getProperty('sdk.dir').trim()
    }
    catch (Exception e) {
        project.getLogger().debug("could not read local.properties", e)
    }
}

jacoco {
    toolVersion = "0.7.1.201405082137"
}

dependencies {
    def coreProject = project(":core")
    compile coreProject
    compile fileTree(dir: 'libs', include: ['*.jar'])

    testCompile coreProject.android.libraryVariants.toList().first().javaCompile.classpath
    testCompile coreProject.android.libraryVariants.toList().first().javaCompile.outputs.files
    testCompile files(coreProject.plugins.findPlugin("android-library").getBootClasspath())

    testCompile 'org.robolectric:robolectric:2.3'
    testCompile 'org.easytesting:fest-assert-core:2.0M8'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'junit:junit:4.+'
}

tasks.withType(Test) {
    scanForTestClasses = false
    include "**/*Should.class"
}

buildscript {
    repositories {
        mavenCentral()
    }
}
